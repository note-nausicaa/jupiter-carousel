
function setUpMoons() {

    const moons = ['Io', 'Europa', 'Ganymede', 'Callisto', 'Amalthea']

    const otherMoons = ['Himalia', 'Elara', 'Pasiphae', 'Sinope', 'Lysithea', 'Carme', 'Ananke', 'Leda', 'Thebe', 'Adrastea', 'Metis', 'Callirrhoe', 'Themisto', 'Megaclite', 'Taygete', 'Chaldene', 'Harpalyke', 'Kalyke', 'Iocaste', 'Erinome', 'Isonoe', 'Praxidike', 'Autonoe', 'Thyone', 'Hermippe', 'Aitne', 'Eurydome', 'Euanthe', 'Euporie', 'Orthosie', 'Sponde', 'Kale', 'Pasithee', 'Hegemone', 'Mneme', 'Aoede', 'Thelxinoe', 'Arche', 'Kallichore', 'Helike', 'Carpo', 'Eukelade', 'Cyllene', 'Kore', 'Herse']

    let moonObjects = [];

    function Moon(name) {
        this.name = name;
        this.orbitInfo = function(orbit, atmosphere) {
            this.orbit = orbit;
            this.atmosphere = atmosphere;
        }
        this.historyInfo = function(history){
            this.history = history;
        }
        this.missionInfo = function(mission) {
            this.mission = mission;
        }
    }

    //Push the moon objects into an array
    const makeMoons = () => {
    
        for (const moon of moons) {
            let newMoon = new Moon(moon);
            moonObjects.push(newMoon);
        }

        // Add Page info to the objects
        for (const thisMoon of moonObjects) {
            if (thisMoon.name === 'Io') {
                thisMoon.orbitInfo(`Io, Jupiter's moon, orbits at an average distance of about 421,700 kilometers from Jupiter, completing one orbit every 1.77 Earth days. Its orbit is slightly elliptical, resulting in tidal forces that generate immense volcanic activity, making Io the most geologically active body in our solar system. The gravitational interplay with Jupiter and its other moons, Europa and Ganymede, further amplifies this volcanic dynamism.`, `Io’s atmosphere is thin and composed mainly of sulfur dioxide, with traces of sulfur monoxide, sodium chloride, and other minor constituents. Despite its tenuous nature, the atmosphere is replenished by volcanic outgassing from Io's active volcanoes. This sulfur-rich envelope gives Io its distinctive yellow-orange hue and contributes to the formation of a plasma torus around Jupiter, creating intense radiation belts that affect the surrounding space environment.`)
                thisMoon.historyInfo(`Io's history`);
                thisMoon.missionInfo(`Io's missions`)
            }
            else if (thisMoon.name === 'Europa'){
                thisMoon.orbitInfo(`Europa, another of Jupiter's moons, orbits at an average distance of approximately 670,900 kilometers from the gas giant. Europa completes its orbit in about 3.55 Earth days. Its nearly circular orbit results in minimal tidal heating compared to Io, but enough to keep its subsurface ocean from freezing solid. This ocean, buried beneath a thick crust of ice, is one of the most compelling targets in the search for extraterrestrial life, owing to the potential for harboring conditions suitable for life.`, `Europa's atmosphere is extremely thin, consisting primarily of oxygen. This oxygen is not a result of biological processes as on Earth but is instead generated by the interaction of sunlight and Jupiter's magnetic field with the icy surface, leading to the breakdown of water molecules. Though sparse, Europa's atmosphere contributes to the moon’s intriguing potential for habitability, furthering the mystery of what lies beneath its icy shell.`)   
                thisMoon.historyInfo(`Europa's history`)
                thisMoon.missionInfo(`Europa's missions`)
            }
            else if (thisMoon.name === 'Ganymede'){
                thisMoon.orbitInfo(`Ganymede, the largest moon in our solar system, orbits Jupiter at an average distance of about 1,070,000 kilometers. It takes approximately 7.15 Earth days to complete one orbit. Ganymede's orbit is slightly eccentric, and it has its own magnetic field, a unique feature among moons, which interacts with Jupiter's massive magnetosphere. Ganymede’s surface is a mix of water ice and rocky material, with visible signs of tectonic activity.`, `Ganymede’s atmosphere is very thin, composed mainly of oxygen, but with significantly less density than Europa’s atmosphere. There are also traces of hydrogen, generated by the interaction of solar radiation with the surface ice. This thin atmosphere offers minimal protection from space radiation, but the presence of oxygen hints at the processes shaping its icy environment. Its geological complexity and potential for subsurface oceans make Ganymede a fascinating subject for scientific exploration.`)
                thisMoon.historyInfo(`Ganymede's history`)
                thisMoon.missionInfo(`Ganymede's mission`)
            }
            else if (thisMoon.name === 'Callisto'){
                thisMoon.orbitInfo(`Callisto, the outermost of Jupiter's four largest moons, orbits at an average distance of about 1,882,700 kilometers from Jupiter, completing one orbit roughly every 16.69 Earth days. Its orbit is less influenced by Jupiter's magnetosphere compared to its sister moons, making it a more stable and less geologically active world. Unlike Io, Europa, or Ganymede, Callisto's surface is heavily cratered and ancient, a testament to its geological inactivity over billions of years.`, `Callisto's atmosphere is extremely thin and tenuous, comprised mostly of carbon dioxide, with smaller amounts of molecular oxygen and hydrogen. This fragile exosphere is maintained by the slow sublimation of surface ice and does little to shield the moon from radiation. The intriguing possibility of a subsurface ocean beneath Callisto’s icy crust, suggested by magnetometer data from the Galileo spacecraft, adds an element of mystery to this seemingly inert world.` )
                thisMoon.historyInfo(`Callisto's history`)
                thisMoon.missionInfo(`Callisto's mission`)
            }
            else if (thisMoon.name === 'Amalthea'){
                thisMoon.orbitInfo(`Amalthea, one of Jupiter’s smaller moons, orbits much closer to the planet than the Galilean moons, at a distance of approximately 181,000 kilometers. It completes an orbit in about 12 hours. Amalthea’s irregular shape and cratered surface suggest a history of collisions and a lack of geological activity. Its close proximity to Jupiter places it within the planet's intense radiation belt.`, `Amalthea’s atmosphere is virtually non-existent, consisting only of a thin layer of material sputtered off its surface by intense radiation and micrometeoroid impacts. This moon’s reddish color is likely due to sulfur and other materials originating from Io, which have settled onto Amalthea's surface. Despite its modest size and unassuming nature, Amalthea’s interaction with Jupiter’s magnetosphere offers valuable insights into the dynamics of this giant planet’s many moons.`)
                thisMoon.historyInfo(`Amalthea's history`)
                thisMoon.missionInfo(`Amalthea's misions`)
            }
        }
    }
    
    makeMoons();

    const moonArray = () => moonObjects;

    const getMoon = (moon) => {
        let thisMoon = moonObjects.find((obj) => obj.name === moon);
        return thisMoon;
    }

    return {
        moonArray,
        getMoon
    }
}


function buildPage() {
    const dropdownList = document.querySelectorAll('.dropdown');

    const setup = setUpMoons();

    const moons = setup.moonArray();

    const addMoons = () => {
        //Add moon names to buttons
        let i = 0;
        for(const div of dropdownList) {
            let button = div.firstElementChild;
            let thisMoon = moons[i];
            
            button.textContent = thisMoon.name;
            i++;
            if (i === 5) {
                return;
            }
        }
    }

    function createPage(moon) {
    
        const orbitPage = (moon) => {
            let div = document.createElement('div');
    
            let orbitTitle = document.createElement('h2');
            let atmosphereTitle = document.createElement('h2')
    
            orbitTitle.textContent = 'Orbit'
            atmosphereTitle.textContent = 'Atmosphere'
    
            let orbitSpan = document.createElement('span')
            let atmosphereSpan = document.createElement('span')
    
            orbitSpan.textContent = moon.orbit;
            atmosphereSpan.textContent = moon.atmosphere;
    
            div.appendChild(orbitTitle);
            div.appendChild(orbitSpan);
    
            div.appendChild(atmosphereTitle);
            div.appendChild(atmosphereSpan);
    
            return div;
        }
    
        const historyPage = () => {
            let div = document.createElement('div');
            div.textContent = moon.history;
            return div;
        }
    
        const missionPage = () => {
            let div = document.createElement('div');
            div.textContent = moon.mission;
            return div;
    
        }
    
        const imageGallery = () => {
            const gallery = fetchImageGallery(moon.name);
            let div = gallery.initCarousel();
            return div;
        }

        return {
            orbitPage,
            historyPage,
            missionPage,
            imageGallery
        }
    }

    const createMenus = () => {

        const menuList = (any) => {

            const menuOptions = ['Orbit and Atmosphere', 'History', 'Planned Missions', 'Image Gallery'];

            let ul = document.createElement('ul');

            // Create 4 list items accoridng to the array above
            for (let j = 0; j < 4; j++) {
                let pages = createPage(any);
                let li = document.createElement('li');
                li.innerText = menuOptions[j];
                if (j === 0) li.addEventListener('click', () => changePage(pages.orbitPage(any)));
                else if (j === 1) li.addEventListener('click', () => changePage(pages.historyPage(any)))
                else if (j=== 2) li.addEventListener('click', () => changePage(pages.missionPage(any)))
                else if (j === 3) li.addEventListener('click', () => changePage(pages.imageGallery(any)))
                ul.appendChild(li);
            }

            function changePage(page){
                let content = document.getElementById('content');
                content.textContent = '';
                content.appendChild(page);
            }

            return ul;

        }
        
        //Append menus and their options
        for (const div of dropdownList) {

            let dropdownContent = div.firstElementChild.nextElementSibling;

            let dropdownContentMenu = dropdownContent.firstElementChild;

            let thisMoon = div.firstElementChild.textContent;

            if (thisMoon === setup.getMoon(thisMoon).name && thisMoon !== 'Others') { 
                let cuteMoon = setup.getMoon(thisMoon)
                dropdownContentMenu.appendChild(menuList(cuteMoon)) 
            }
        }
    }

    addMoons();
    createMenus();
}

buildPage();

function fetchImageGallery(any) {

    this.moon = any;

    this.array = [];

    const getImage = (moon, x) => {

        if (x < 0) return;

        let link = 'https://images-api.nasa.gov/search?q='+`${moon}`;
        let img = new Image;
        fetch(link, ["image"], {
            mode: 'cors'
        })
        .then(function(response) {
            return response.json();
        })
        .then(function(response){
            console.log(response)
            img.src = `${response.collection.items[x].links[0].href}`;
        })

        img.id = x;

        return img;
    };

    

    const initCarousel = () => {

        let mainDivContainer = document.createElement('div');
  
        let mainDiv = document.createElement('div');
        mainDiv.classList.add('image-gallery')
        let currentDiv = document.createElement('div');
        let prevDiv = document.createElement('div');
        let nextDiv = document.createElement('div');

        mainDiv.appendChild(prevDiv);
        mainDiv.appendChild(currentDiv);
        mainDiv.appendChild(nextDiv);

        mainDivContainer.appendChild(mainDiv)
        let dotDiv = document.createElement('div');

        this.imageList = mainDiv.childNodes;

        for (let i = 0; i < 3; i++) {
            this.array.push(i);
            this.imageList[i].appendChild(getImage(this.moon, i));
            // Create corresponding dots
            let span = document.createElement('span');
            span.id = i;
            span.classList.add('dot')
            dotDiv.appendChild(span);

            span.addEventListener('click', () => {
                let spanNum = parseInt(span.id)
                let newArray = [spanNum-1, spanNum, spanNum+1];
                this.array = newArray;
                updateImage();
            })
        }

        //Imeplement clicking functions for prevDIv and nextDiv
        nextDiv.addEventListener('click', () => {
            nextImage();
        })

        prevDiv.addEventListener('click', () => {
            prevImage();
        })

        let btnContainer = document.createElement('div')
        btnContainer.classList.add('btn-container')
        let rightBtn = document.createElement('button');

        rightBtn.textContent = '>'

        rightBtn.addEventListener('click', () => {
            nextImage();
        })

        let leftBtn = document.createElement('button')
        leftBtn.textContent = '<'
        leftBtn.addEventListener('click', () => {
                prevImage();
            })
        
        btnContainer.appendChild(leftBtn)
        btnContainer.appendChild(rightBtn);

        let footer = document.createElement('div')
        footer.classList.add('footer')

        footer.appendChild(dotDiv)
        footer.appendChild(btnContainer)

        mainDivContainer.appendChild(footer);

        this.navigator = dotDiv.childNodes;
        
        setInterval(()=> nextImage(), 5000)
        setInterval(()=> console.log('hey'), 5000)

        return mainDivContainer;
    };

    const nextImage = () => {
        let newArray = this.array.map((num) => {return num+1})
        this.array = newArray;
        updateImage();

    };

    const prevImage = () => {

        let newArray = this.array.map((num) => {return num-1})

        this.array = newArray;
        updateImage();

    };

    function updateImage () {
        for (let i = 0; i < 3; i++) {
            
            if (this.imageList[i].firstElementChild.src = '') {
                this.imageList[i].appendChild(getImage(this.moon, this.array[i]));
            }
                
            else {
                this.imageList[i].replaceChild(getImage(this.moon, this.array[i]), this.imageList[i].firstElementChild);
                
            }
        }

    }


    return {
        getImage,
        initCarousel,
        nextImage,
        prevImage
    }
}
